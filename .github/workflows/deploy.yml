name: Fetch and Deploy to GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    # use ubuntu-latest image to run steps on
    runs-on: ubuntu-latest
    steps:
    # sets up .NET Core SDK 3.1
    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v3

    # checkout
    - uses: actions/checkout@v3

    # publishes Blazor project to the release-folder
    - name: Publish .NET Core Project
      run: dotnet publish src/WebApp/WebApp.csproj -c Release -o release --nologo

    # changes the base-tag in index.html from '/' to 'dish-action' to match GitHub Pages repository subdirectory
    - name: Change base-tag in index.html from / to dish-action
      run: sed -i 's/<base href="\/" \/>/<base href="\/dish-action\/" \/>/g' release/wwwroot/index.html

    # copy index.html to 404.html to serve the same file when a file is not found
    - name: copy index.html to 404.html
      run: cp release/wwwroot/index.html release/wwwroot/404.html

    # copy data from Data into wwwroot/data
    - name: copy data from Data into wwwroot/data
      run: cp -r Data release/wwwroot/data

    # (Allow files and folders starting with an underscore)
    - name: Add .nojekyll file
      run: touch release/wwwroot/.nojekyll

    - name: Publish artefacts
      uses: actions/upload-pages-artifact@v1
      with:
        name: github-pages
        path: release/wwwroot

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2